swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /store/inventory:
    get:
      tags:
      - Transaction Module
      summary: Retrieve  all transactions of a user for current month
      description: API to retrieve all current month transactions of a user account
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        "200":
          description: Account current month transactions successfully retrieved
          schema:
            allOf:
            - $ref: '#/definitions/ApiTransactionResponse'
            - type: object
              properties:
                body:
                  type: object
                  properties:
                    transactions:
                      type: array
                      description: user account current month transactions
                      items:
                        $ref: "#/definitions/TransactionInformations"
        "400":
          description: Invalid values
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
    post:
      tags:
      - Transaction Module
      summary: create a new transaction
      description: API for creating user account new transaction
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: Transaction Payload
        required: true
        schema:
          $ref: '#/definitions/TransactionData'
      security:
      - Bearer: []
      responses:
        "201":
          description: new transaction successfully created
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "400":
          description: Invalid values
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
           
  /store/inventory/{transactionId}:
    get:
      tags:
      - Transaction Module
      summary: Find transaction by id
      description: API for fetching informations of a selected transaction
      operationId: getTransactionById
      produces:
        - "application/json"
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - name: "transactionId"
        in: "path"
        description: "ID of transaction to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            allOf:
            - $ref: '#/definitions/ApiTransactionResponse'
            - type: object
              properties:
                body:
                  type: object
                  properties:
                    transaction:
                      type: array
                      description: user account current month transactions
                      items:
                        $ref: "#/definitions/TransactionInformations"
        "400":
          description: "Invalid ID transaction"
        "404":
          description: "Transaction not found"
      security:
        - Bearer: []
    put:
      tags:
      - Transaction Module
      summary: update a transaction
      description: API for updating transaction
      operationId: updateTransactionById"
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - name: "transactionId"
        in: "path"
        description: "ID of transaction to return"
        required: true
        type: "integer"
        format: "int64"
      - in: body
        name: body
        description: Transaction Payload
        required: true
        schema:
          $ref: '#/definitions/TransactionData'
      security:
      - Bearer: []
      responses:
        "200":
          description: transaction successfully updated
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "400":
          description: Invalid values
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiTransactionResponse' 
    delete:
      tags:
      - Transaction Module
      summary: Delete transaction by id
      description: API for deleting informations of a selected transaction
      operationId: deleteTransactionById
      produces:
        - "application/json"
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - name: "transactionId"
        in: "path"
        description: "ID of transaction to delete"
        required: true
        type: "integer"
        format: "int64"
      security:
        - Bearer: []
      responses:  
        "200":
          description: "successful operation"
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error  

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionInformations:
    properties:
      _id:
        type : string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        description: autogenerated transaction id
      userId:
        type : string
        example: m240f1ee-6c54-4b01-90e6-d701748f06
        description: User's transaction id
      name:
        type: string
        example: paiement 
      amount:
        type: number
        format: float
        example: 5.12
        description: transaction amount
      description:
        type: string
      date :
         type: string
         format: date-time
         example: 2016-08-29T09:12:33.001+0000
         description: transaction date
      notes :
        type : object
        example: ["note 1", "note 2"]
      category:
        type: string
        description: transaction type
        example: Food        
  ApiTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
  TransactionData :
    properties:
      name:
        type: string
        description: Transaction name
      descrition:
        type: string
        description: Transaction description
      amount:
        type: number
        description: Value of transaction
      date :
         type: string
         description: transaction date
      notes :
        type : object
        description: transaction notes
      category:
        type: string
        description: transaction type
       